 # Build the package
colcon build --symlink-install

# Source the setup script
source install/setup.bash

# Kill all existing nodes
killall ros2
# Source the setup file
source /home/sam3/Desktop/Toms_Workspace/active_mapping/install/setup.bash

# Start the lauch file
ros2 launch neural_slam_ros neural_slam.launch.py 

# Monitor for transforms being published:
ros2 topic echo /tf
---
transforms:
- header:
    stamp:
      sec: 0
      nanosec: 0
    frame_id: world
  child_frame_id: camera
  transform:
    translation:
      x: -0.9723049402236938
      y: -0.4288483262062073
      z: 0.27826493978500366
    rotation:
      x: -0.014740434475243092
      y: -0.5697433352470398
      z: -0.18401587009429932
      w: 0.8008204698562622
---
transforms:
- header:
    stamp:
      sec: 0
      nanosec: 0
    frame_id: world
  child_frame_id: camera
  transform:
    translation:
      x: -0.9723049402236938
      y: -0.4288483262062073
      z: 0.27826493978500366
    rotation:
      x: -0.014740434475243092
      y: -0.5697433352470398
      z: -0.18401587009429932
      w: 0.8008204698562622

# Check if the neural reconstruction is working:
ros2 topic echo /neural_recon/status
(neucon) sam3@sam3-dl-1:~/Desktop/Toms_Workspace/active_mapping$ $ ros2 topic echo /neural_recon/status
data: 'Frames: 0, Processed: 0, Queue: 0, Poses: 0, Has trajectory: False, Processing: 0.000s (1000.0 FPS), TF failures: 0'
---
data: 'Frames: 0, Processed: 0, Queue: 0, Poses: 0, Has trajectory: False, Processing: 0.000s (1000.0 FPS), TF failures: 0'
---
data: 'Frames: 0, Processed: 0, Queue: 0, Poses: 0, Has trajectory: False, Processing: 0.000s (1000.0 FPS), TF failures: 0'
---
data: 'Frames: 0, Processed: 0, Queue: 0, Poses: 0, Has trajectory: False, Processing: 0.000s (1000.0 FPS), TF failures: 0'

5. Check if the ORB-SLAM3 is working:
ros2 topic echo /orb_slam3/trajectory
- header:
    stamp:
      sec: 0
      nanosec: 0
    frame_id: world
  ns: trajectory
  id: 77
  type: 2
  action: 0
  pose:
    position:
      x: -0.0978919044137001
      y: -0.081174336373806
      z: 0.0910995751619339
    orientation:
      x: 0.031962987035512924
      y: -0.33106422424316406
      z: -0.15141333639621735
      w: 0.9308323264122009
  scale:
    x: 0.05
    y: 0.05
    z: 0.05
  color:
    r: 0.0
    g: 0.699999988079071
    b: 0.20000000298023224
    a: 1.0
  lifetime:
    sec: 0
    nanosec: 0
  frame_locked: false
  points: []
  colors: []
  texture_resource: ''
  texture:
    header:
      stamp:
        sec: 0
        nanosec: 0
      frame_id: ''
    format: ''
    data: []
  uv_coordinates: []
  text: ''
  mesh_resource: ''
  mesh_file:
    filename: ''
    data: []
  mesh_use_embedded_materials: false
- header:
    stamp:
      sec: 0
      nanosec: 0
    frame_id: world
  ns: trajectory
  id: 78
  type: 2
  action: 0
  pose:
    position:
      x: -0.10149694979190826
      y: -0.08220226317644119
      z: 0.09168566018342972
    orientation:
      x: 0.03406001627445221
      y: -0.33430662751197815
      z: -0.15602336823940277
      w: 0.9288356900215149
  scale:
    x: 0.05
    y: 0.05
    z: 0.05
  color:
    r: 0.0
    g: 0.699999988079071
    b: 0.20000000298023224
    a: 1.0
  lifetime:
    sec: 0
    nanosec: 0
  frame_locked: false
  points: []
  colors: []
  texture_resource: ''
  texture:
    header:
      stamp:
        sec: 0
        nanosec: 0
      frame_id: ''
    format: ''
    data: []
  uv_coordinates: []
  text: ''
  mesh_resource: ''
  mesh_file:
    filename: ''
    data: []
  mesh_use_embedded_materials: false


(neucon) sam3@sam3-dl-1:~/Desktop/Toms_Workspace/active_mapping$ ./fix_enviroment.sh ros2 launch neural_slam_ros neural_slam.launch.py 
Running with modified environment...
LD_LIBRARY_PATH priority: /usr/lib/x86_64-linux-gnu:/usr/local/lib
[INFO] [launch]: All log files can be found below /home/sam3/.ros/log/2025-03-05-15-00-30-647313-sam3-dl-1-777108
[INFO] [launch]: Default logging verbosity is set to INFO
Using configuration from: /home/sam3/Desktop/Toms_Workspace/active_mapping/install/neural_slam_ros/share/neural_slam_ros/config/EuRoC_mono_inertial.yaml
[INFO] [mono_inertial_node-1]: process started with pid [777109]
[INFO] [mono_driver_node.py-2]: process started with pid [777111]
[INFO] [run_neural_recon.sh-3]: process started with pid [777113]
[INFO] [rviz2-4]: process started with pid [777115]
[mono_inertial_node-1] [INFO] [1741204830.787670811] [mono_slam_cpp]: 
[mono_inertial_node-1] ORB-SLAM3 MONOCULAR-INERTIAL NODE STARTED
[mono_inertial_node-1] [INFO] [1741204830.791239308] [mono_slam_cpp]: nodeName not_given
[mono_inertial_node-1] [INFO] [1741204830.791264325] [mono_slam_cpp]: voc_file /home/sam3/Desktop/Toms_Workspace/active_mapping/src/ros2_orb_slam3/orb_slam3/Vocabulary/ORBvoc.txt.bin
[mono_inertial_node-1] [INFO] [1741204830.792465139] [mono_slam_cpp]: IMU subscription enabled on topic: /imu/data
[mono_inertial_node-1] [INFO] [1741204830.792494768] [mono_slam_cpp]: TF broadcasting enabled at 20.0 Hz
[mono_inertial_node-1] [INFO] [1741204830.792501125] [mono_slam_cpp]: Waiting to finish handshake ......
[rviz2-4] [INFO] [1741204830.865522336] [rviz2]: Stereo is NOT SUPPORTED
[rviz2-4] [INFO] [1741204830.865628636] [rviz2]: OpenGl version: 4.5 (GLSL 4.5)
[rviz2-4] [INFO] [1741204830.897501589] [rviz2]: Stereo is NOT SUPPORTED
[run_neural_recon.sh-3] Traceback (most recent call last):
[run_neural_recon.sh-3]   File "/home/sam3/Desktop/Toms_Workspace/active_mapping/install/neural_slam_ros/lib/neural_slam_ros/neural_recon_node.py", line 15, in <module>
[run_neural_recon.sh-3]     import torch
[run_neural_recon.sh-3] ModuleNotFoundError: No module named 'torch'
[INFO] [run_neural_recon.sh-3]: process has finished cleanly [pid 777113]
[mono_inertial_node-1] [INFO] [1741204831.129086136] [mono_slam_cpp]: Configuration YAML file name: EuRoC_mono_inertial
[mono_inertial_node-1] [INFO] [1741204831.129111542] [mono_slam_cpp]: Sent response: ACK
[mono_inertial_node-1] [INFO] [1741204831.129146661] [mono_slam_cpp]: Path to settings file: /home/sam3/Desktop/Toms_Workspace/active_mapping/src/ros2_orb_slam3/orb_slam3/config/Monocular-Inertial/EuRoC_mono_inertial.yaml
[mono_inertial_node-1] [INFO] [1741204831.129151930] [mono_slam_cpp]: Using IMU_MONOCULAR mode
[mono_inertial_node-1] Failed to open settings file at: /home/sam3/Desktop/Toms_Workspace/active_mapping/src/ros2_orb_slam3/orb_slam3/config/Monocular-Inertial/EuRoC_mono_inertial.yaml
[mono_inertial_node-1] 
[mono_inertial_node-1] TODO new welcome message
[mono_inertial_node-1] Input sensor was set to: Monocular-Inertial
[ERROR] [mono_inertial_node-1]: process has died [pid 777109, exit code 255, cmd '/home/sam3/Desktop/Toms_Workspace/active_mapping/install/neural_slam_ros/lib/neural_slam_ros/mono_inertial_node --ros-args -r __node:=mono_slam_cpp --params-file /tmp/launch_params_8af72jzg'].
^C[WARNING] [launch]: user interrupted with ctrl-c (SIGINT)
[rviz2-4] [INFO] [1741204858.837954268] [rclcpp]: signal_handler(signum=2)
[mono_driver_node.py-2] -------------- Received parameters --------------------------
[mono_driver_node.py-2] 
[mono_driver_node.py-2] self.settings_name: EuRoC
[mono_driver_node.py-2] self.image_seq: sample
[mono_driver_node.py-2] 
[mono_driver_node.py-2] self.image_sequence_dir: /home/sam3/Desktop/Toms_Workspace/active_mapping/src/ros2_orb_slam3/TEST_DATASET/sample
[mono_driver_node.py-2] 
[mono_driver_node.py-2] self.image_seq_dir 
[mono_driver_node.py-2] len(self.imgz_seqz) 585
[mono_driver_node.py-2] Found IMU data at: /home/sam3/Desktop/Toms_Workspace/active_mapping/src/ros2_orb_slam3/TEST_DATASET/sample/mav0/imu0/data.csv
[mono_driver_node.py-2] make sure length is 7
[mono_driver_node.py-2] Loaded 22721 IMU measurements
[mono_driver_node.py-2] Configuration to be sent: EuRoC_mono_inertial
[mono_driver_node.py-2] IMU data available and publisher initialized
[mono_driver_node.py-2] 
[mono_driver_node.py-2] MonoDriver initialized, attempting handshake with CPP node
[mono_driver_node.py-2] Got ack: ACK
[mono_driver_node.py-2] Handshake complete
[mono_driver_node.py-2] Traceback (most recent call last):
[mono_driver_node.py-2]   File "/home/sam3/Desktop/Toms_Workspace/active_mapping/install/ros2_orb_slam3/lib/ros2_orb_slam3/mono_driver_node.py", line 365, in <module>
[mono_driver_node.py-2]     main()
[mono_driver_node.py-2]   File "/home/sam3/Desktop/Toms_Workspace/active_mapping/install/ros2_orb_slam3/lib/ros2_orb_slam3/mono_driver_node.py", line 361, in main
[mono_driver_node.py-2]     rclpy.shutdown()
[mono_driver_node.py-2]   File "/opt/ros/humble/local/lib/python3.10/dist-packages/rclpy/__init__.py", line 130, in shutdown
[mono_driver_node.py-2]     _shutdown(context=context)
[mono_driver_node.py-2]   File "/opt/ros/humble/local/lib/python3.10/dist-packages/rclpy/utilities.py", line 58, in shutdown
[mono_driver_node.py-2]     return context.shutdown()
[mono_driver_node.py-2]   File "/opt/ros/humble/local/lib/python3.10/dist-packages/rclpy/context.py", line 102, in shutdown
[mono_driver_node.py-2]     self.__context.shutdown()
[mono_driver_node.py-2] rclpy._rclpy_pybind11.RCLError: failed to shutdown: rcl_shutdown already called on the given context, at ./src/rcl/init.c:241
[INFO] [rviz2-4]: process has finished cleanly [pid 777115]
[ERROR] [mono_driver_node.py-2]: process has died [pid 777111, exit code 1, cmd '/home/sam3/Desktop/Toms_Workspace/active_mapping/install/ros2_orb_slam3/lib/ros2_orb_slam3/mono_driver_node.py --ros-args -r __node:=mono_py_driver --params-file /tmp/launch_params_86llzm6a'].




